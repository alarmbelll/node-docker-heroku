# Language setting
language: node_js

build_image: drydock/u12nod:prod

# Version number
node_js:
  - 0.12

# The path for Xunit to output test reports
env:
  global:
    - SLACK_HOOK_URL=https://hooks.slack.com/services/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
    - APP_NAME=shippable-docker-1001 
- secure: ZKwiIGRLRxWZhC9p5BZjvzq6+rl2VlQf7HUnkhn+gE9MM/4eauY+ChmRQEOPT0ZAuraj3yFtZ9zpDWEcCpU3Mk72GmAhgRZLDmMRhSNhykNmwCIhvxCQU2GQWcmoHCKCgiaFCk7zz/l/+/8BItd6sjQOcVQ6kPzg3ywxs6vyDI5OBvVxbzyNfjF1vwR+Ot7x3ifxWIkioOV0spZxKuQHbtVnKAeOWh4jYhGR/OwrCpWhAcez2jWXkTMDqZ3R4cbAkWi9l7kb+lIUvY/irg6c84UE2V23naKX+toToStGPHKYKzFcUL9AFWXXi7higxJ6UAEyNSXv4rgZlSV1u6yhvw==  
before_install:
  - which heroku || wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
  - heroku plugins:install heroku-docker

install:
  - source ~/.nvm/nvm.sh && nvm install 0.12
  - node --version
  - npm install
#  - . installMongo.sh
#  - cat /etc/mongod.conf
#  - sudo mongod --smallfiles &
#  - sleep 15
#  - mongo --eval 'db.collection.find()'

# Create directories for test and coverage reports
before_script:
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage

# Running the tests with grunt
#script:
#  - grunt

# Tell istanbul to generate a coverage report
#after_script:
#  - ./node_modules/.bin/istanbul cover grunt -- -u tdd
#  - ./node_modules/.bin/istanbul report cobertura --dir  shippable/codecoverage/
#after_failure:
#  - node node_modules/slack-shippable/index.js

after_success:
  - test -f ~/.ssh/id_rsa.heroku || ssh-keygen -y -f /tmp/ssh/00_sub > ~/.ssh/id_rsa.heroku && heroku keys:add ~/.ssh/id_rsa.heroku
  - heroku docker:release   
#  - git remote -v | grep ^heroku || heroku git:remote --ssh-git --app shippable-heroku-1001
#  - git push -f heroku master
#  - node node_modules/slack-shippable/index.js -s
