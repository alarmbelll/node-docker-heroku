# Language setting
language: node_js

build_image: drydock/u12nod:prod

# Version number
node_js:
  - 0.12

# The path for Xunit to output test reports
env:
  global:
    - APP_NAME=obscure-dusk-97601
    - secure: 57ab9324-e393-474d-af00-db31882aaeb4
before_install:
  - which heroku || wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
  - heroku plugins:install heroku-docker
  - curl -L https://github.com/docker/compose/releases/download/1.6.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  
  
install:
  - source ~/.nvm/nvm.sh && nvm install 0.12
  - node --version
  - npm install
#  - . installMongo.sh
#  - cat /etc/mongod.conf
#  - sudo mongod --smallfiles &
#  - sleep 15
#  - mongo --eval 'db.collection.find()'

# Create directories for test and coverage reports
before_script:
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage

# Running the tests with grunt
#script:
#  - grunt

# Tell istanbul to generate a coverage report
#after_script:
#  - ./node_modules/.bin/istanbul cover grunt -- -u tdd
#  - ./node_modules/.bin/istanbul report cobertura --dir  shippable/codecoverage/
#after_failure:
#  - node node_modules/slack-shippable/index.js

after_success:
  - test -f ~/.ssh/id_rsa.heroku || ssh-keygen -y -f /tmp/ssh/00_sub > ~/.ssh/id_rsa.heroku && heroku keys:add ~/.ssh/id_rsa.heroku
  - docker-compose build
  - heroku docker:release --app obscure-dusk-97601   
#  - git remote -v | grep ^heroku || heroku git:remote --ssh-git --app shippable-heroku-1001
#  - git push -f heroku master
#  - node node_modules/slack-shippable/index.js -s
#    ㅇㅅㅇ
